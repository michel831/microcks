kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-config"
  labels:
    app: "{{ .Values.appName }}"
    container: spring
    group: microcks
data:
  application.properties: |-
    # Application configuration properties
    tests-callback.url=${TEST_CALLBACK_URL}
    postman-runner.url=${POSTMAN_RUNNER_URL}

    network.username=
    network.password=

    validation.resourceUrl=http://{{ .Values.microcksHost }}/api/resources/
    services.update.interval=${SERVICES_UPDATE_INTERVAL:0 0 0/2 * * *}

    # Logging configuration properties
    logging.config=/deployments/config/logback.xml

    # Keycloak configuration properties
    keycloak.auth-server-url=${KEYCLOAK_URL:http://localhost:8180/auth}
    keycloak.realm=microcks
    keycloak.resource=microcks-app
    keycloak.bearer-only=true
    keycloak.ssl-required=external

    keycloak.security-constraints[0].authRoles[0]=admin
    keycloak.security-constraints[0].authRoles[1]=manager
    keycloak.security-constraints[0].authRoles[2]=user
    keycloak.security-constraints[0].securityCollections[0].name=Insecure stuffs
    keycloak.security-constraints[0].securityCollections[0].patterns[0]=/api/services
    keycloak.security-constraints[0].securityCollections[0].patterns[1]=/api/services/count
    keycloak.security-constraints[0].securityCollections[0].patterns[2]=/api/jobs
    keycloak.security-constraints[0].securityCollections[0].patterns[3]=/api/jobs/count
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>

    <configuration scan="true">
      <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <charset>utf-8</charset>
          <Pattern>[%p] %c - %m%n</Pattern>
        </encoder>
      </appender>

      <logger name="io.github.microcks" level="INFO"/>
      <!-- Change com.mongodb to org.mongodb so that com.mongodb.FongoDBCollection is ignored, set to debug and tests do not fail... -->
      <logger name="org.mongodb" level="INFO"/>
      <logger name="org.springframework.data.mongodb" level="INFO"/>
      <logger name="org.keycloak" level="INFO"/>

      <logger name="javax.activation" level="WARN"/>
      <logger name="javax.mail" level="WARN"/>
      <logger name="javax.xml.bind" level="WARN"/>
      <logger name="ch.qos.logback" level="WARN"/>
      <logger name="com.codahale.metrics" level="WARN"/>
      <logger name="com.ryantenney" level="WARN"/>
      <logger name="com.sun.xml.internal.bind" level="WARN"/>
      <logger name="com.zaxxer" level="WARN"/>
      <logger name="io.undertow" level="WARN"/>
      <logger name="org.apache" level="WARN"/>
      <logger name="org.apache.catalina.startup.DigesterFactory" level="OFF"/>
      <logger name="org.bson" level="WARN"/>
      <logger name="org.hibernate.validator" level="WARN"/>
      <logger name="org.hibernate" level="WARN"/>
      <logger name="org.hibernate.ejb.HibernatePersistence" level="OFF"/>
      <logger name="org.springframework" level="WARN"/>
      <logger name="org.springframework.aop" level="WARN"/>
      <logger name="org.springframework.web" level="WARN"/>
      <logger name="org.springframework.security" level="WARN"/>
      <logger name="org.springframework.cache" level="WARN"/>
      <logger name="org.springframework.scheduling" level="WARN"/>
      <logger name="org.thymeleaf" level="WARN"/>
      <logger name="org.xnio" level="WARN"/>
      <logger name="com.mangofactory.swagger" level="WARN"/>
      <logger name="com.wordnik.swagger" level="warn"/>
      <logger name="sun.rmi.transport" level="warn"/>

      <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
      </contextListener>

      <root level="${logback.loglevel}">
        <appender-ref ref="CONSOLE"/>
      </root>
    </configuration>
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak-config"
  labels:
    app: "{{ .Values.appName }}"
    container: keycloak
    group: microcks
data:
  microcks-realm.json: |-
    {
      "id": "microcks",
      "realm": "microcks",
      "displayName": "Microcks",
      "notBefore": 0,
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "offlineSessionIdleTimeout": 2592000,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "name": "admin",
            "scopeParamRequired": false,
            "composite": false,
            "clientRole": false,
            "containerId": "microcks"
          },
          {
            "name": "manager",
            "scopeParamRequired": false,
            "composite": false,
            "clientRole": false,
            "containerId": "microcks"
          },
          {
            "name": "user",
            "scopeParamRequired": false,
            "composite": false,
            "clientRole": false,
            "containerId": "microcks"
          }
        ]
      },
      "defaultRoles": [ "user" ],
      "requiredCredentials": [ "password" ],
      "scopeMappings": [
        {
          "client": "microcks-app-js",
          "roles": ["admin", "manager", "user"]
        }
      ],
      "applications": [
        {
          "name": "microcks-app",
          "enabled": true,
          "bearerOnly": true
        },
        {
          "name": "microcks-app-js",
          "enabled": true,
          "publicClient": true,
          "webOrigins": [
            "+"
          ],
          "redirectUris": [
            "http://{{ .Values.microcksHost }}/*"
          ]
        },
        {
          "name": "microcks-serviceaccount",
          "enabled": true,
          "bearerOnly": false,
          "publicClient": false,
          "standardFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "clientAuthenticatorType": "client-secret"
        }
      ],
      "identityProviders": [
      ],
      "keycloakVersion": "3.4.0.Final"
    }